generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum MimeType {
  IMAGE_PNG
  IMAGE_JPEG
  IMAGE_GIF
  PDF
  VIDEO_MP4
}

enum MediaStatus {
  UPLOADED
  PROCESSING
  DELETED
}

enum ProductStatus {
  AVAILABLE
  OUT_OF_STOCK
  DISCONTINUED
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  name         String?
  passwordHash String
  role         Role      @default(USER)
  address      String?
  phoneNumber  String?
  refreshToken String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  media        Media[]   // Đổi tên thành media cho nhất quán
  products     Product[] // Đổi tên thành products cho nhất quán
}

model Media {
  id           String       @id @default(uuid())
  url          String
  mimeType     MimeType
  size         Int
  originalName String?
  description  String?
  status       MediaStatus? @default(UPLOADED)
  uploadedAt   DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  product      Product?     @relation(fields: [productId], references: [id], onDelete: SetNull)
  productId    String?

  @@index([userId])
  @@index([productId])
}

model Product {
  id          String        @id @default(uuid())
  name        String
  description String?
  price       Int
  stock       Int
  status      ProductStatus @default(AVAILABLE)
  media       Media[]       @relation // Đổi tên thành media cho nhất quán
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  createdBy   User          @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById String

  @@index([createdById])
}