generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum MimeType {
  IMAGE_PNG
  IMAGE_JPEG
  IMAGE_GIF
  PDF
  VIDEO_MP4
}

enum MediaStatus {
  UPLOADED
  PROCESSING
  DELETED
}

enum ProductStatus {
  AVAILABLE
  OUT_OF_STOCK
  DISCONTINUED
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  name         String?
  passwordHash String // đổi tên từ `password` cho rõ ràng
  role         Role      @default(USER) // dùng enum thay vì string thuần
  address      String?
  phoneNumber  String?
  refreshToken String? // đổi tên rõ nghĩa hơn, camelCase
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  Media        Media[]
  Product      Product[]
}

model Media {
  id           String       @id @default(uuid())
  url          String // Đường dẫn tới file (local hoặc URL S3)
  mimeType     MimeType // MIME type của file, dùng enum để nhất quán
  size         Int // Kích thước file (byte)
  originalName String? // Tên file gốc (optional)
  description  String? // Mô tả file (optional)
  status       MediaStatus? // Trạng thái file (optional, nếu cần)
  uploadedAt   DateTime     @default(now())
  updatedAt    DateTime     @updatedAt // Thêm để theo dõi cập nhật
  user         User         @relation(fields: [userId], references: [id]) // Quan hệ bắt buộc
  userId       String
  Product      Product[]

  @@index([userId]) // Thêm chỉ mục cho userId
}

model Product {
  id          String        @id @default(uuid())
  name        String // Tên sản phẩm (VD: Mắm nêm, Mắm ruốc,...)
  description String? // Mô tả sản phẩm
  price       Int // Giá bán (đơn vị: VNĐ)
  stock       Int // Số lượng tồn kho
  status      ProductStatus @default(AVAILABLE) // Trạng thái hàng hóa
  image       Media?     @relation(fields: [imageId], references: [id]) // Ảnh đại diện sản phẩm
  imageId     String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String

  @@index([createdById])
  @@index([imageId])
}
